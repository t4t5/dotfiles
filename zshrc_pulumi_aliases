# Pulumi: "pu up staging"
pu() {
  if [ $# -lt 1 ]; then
    echo "Missing argument: action (init, up)"
  fi

  if [ "$1" = "init" ]; then
    if [ ! -f ./Pulumi.yaml ]; then
      project_name=$(node -p "require('./package.json').name")
      echo "name: $project_name" >> Pulumi.yaml
      echo "runtime: nodejs" >> Pulumi.yaml
      echo "main: infra.ts" >> Pulumi.yaml

      touch infra.ts
      echo "import * as pulumi from \"@pulumi/pulumi\"" >> infra.ts

      echo "Created pulumi project $project_name"
      echo "Add a new environment with 'pu addstack staging'"
    fi
  elif [ "$1" = "addstack" ]; then
    if [ $# -lt 2 ]; then
      echo "Missing argument: env (staging, production)"
    else
      echo "Create new stack $2? (y/n)"
      read -r input
      if [ "$input" = "y" ]; then
        touch .env."$2"
        pulumi stack init "$2"
      fi
    fi
  elif [ "$1" = "up" ]; then
    if [ $# -lt 2 ]; then
      echo "Missing argument: env (staging, production)"
    else
      op run --env-file=.env."$2" -- pulumi preview
      echo "Deploy? (y/n)"
      read -r input
      if [ "$input" = "y" ]; then
        op run --env-file=.env."$2" -- pulumi up --skip-preview
      fi
    fi
  elif [ "$1" = "show" ]; then
    if [ $# -lt 2 ]; then
      echo "Missing argument: key (i.e. deployerAccessKeySecret)"
    else
      pulumi stack output "$2" --show-secrets
    fi
  else
    pulumi "$@"
  fi
}

